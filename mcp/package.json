{
  "name": "@typespec/mcp",
  "version": "0.1.0",
  "author": "Microsoft Corporation",
  "license": "MIT",
  "type": "module",
  "main": "dist/src/index.js",
  "tspMain": "lib/main.tsp",
  "exports": {
    ".": {
      "typespec": "./lib/main.tsp",
      "types": "./dist/src/index.d.ts",
      "default": "./dist/src/index.js"
    },
    "./testing": {
      "types": "./dist/src/testing/index.d.ts",
      "default": "./dist/src/testing/index.js"
    }
  },
  "peerDependencies": {
    "@typespec/compiler": "^1.0.0-rc.0",
    "@typespec/http": "^1.0.0-rc.0"
  },
  "devDependencies": {
    "@alloy-js/babel-preset": "^0.2.0",
    "@babel/cli": "^7.26.4",
    "@babel/core": "^7.26.10",
    "@rollup/plugin-babel": "^6.0.4",
    "@types/node": "latest",
    "@typescript-eslint/eslint-plugin": "^8.15.0",
    "@typescript-eslint/parser": "^8.15.0",
    "@typespec/compiler": "^1.0.0-rc.0",
    "@typespec/http": "^1.0.0-rc.0",
    "@typespec/library-linter": "latest",
    "concurrently": "^9.1.2",
    "eslint": "^9.15.0",
    "prettier": "^3.3.3",
    "typescript": "^5.3.3"
  },
  "dependencies": {
    "@alloy-js/core": "^0.6.0",
    "@alloy-js/typescript": "^0.6.0",
    "@modelcontextprotocol/sdk": "^1.6.1",
    "@typespec/emitter-framework": "0.3.0",
    "yaml": "~2.7.0",
    "zod": "^3.23.8"
  },
  "files": [
    "lib/*.tsp",
    "dist/**",
    "!dist/test/**"
  ],
  "scripts": {
    "build-src": "babel src -d dist/src --extensions .ts,.tsx",
    "build-tsc": "tsc -p .",
    "build": "tsc -p . && npm run build-src",
    "watch-src": "babel src -d dist/src --extensions .ts,.tsx --watch",
    "watch-tsc": "tsc -p . --watch",
    "watch": "concurrently --kill-others \"npm run watch-tsc\" \"npm run watch-src\"",
    "build:tsp": "tsp compile . --warn-as-error --import @typespec/library-linter --no-emit",
    "test": "node --test",
    "test:watch": "node --test --watch",
    "lint": "eslint src/ test/ --report-unused-disable-directives --max-warnings=0",
    "lint:fix": "eslint . --report-unused-disable-directives --fix",
    "format": "prettier .  --write",
    "format:check": "prettier --check ."
  },
  "private": true
}
